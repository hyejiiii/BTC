#wrap {
    width: 370px;
    margin: 10px auto;
}

#wrap div.item {
    position: relative;
    margin-bottom: 10px;
}

#wrap li.thum {
    position: relative;
    height: 100px;
}

#wrap li.thum > div.thum {
    width: 100%;
    height: 100px;

}

#wrap li.thum > div.thum img {
    /* 비율 맞춰서 크기 조정하기 위해 */
    min-width: 170px;
    max-width: 170px;
    border-radius: 7px;
}

#wrap li.thum > div.time {
    /* 원래 위치와 상관없이 움직여야 함 */
    position: absolute;
    bottom: 0; right: 0;
    text-align: right;
    padding: 0 7px;
    font-size: .9em;
    background-color: rgba(0, 0, 0, .7);
    color: white;
    border-radius: 0 0 7px 0;
}

#wrap li.txt > div {
    width: 180px;
    padding: 0 0 0 10px;
    font-size: .9em;
}

#wrap li.txt > div:nth-child(1) {
    font-weight: bold;
    margin-bottom: 7px;
}

/* Position 속성 : static, absolute, fixed, relative */
/* 요소의 위치가 static이면 영향 없음 */
/* absolute : 브라우저의 원점을 기준으로 움직임*/
/*            부모요소가 없다면 body를 기준으로 상대적인 위치에 배치 */
/* relative: 현 위치와의 상대적 위치로 오프셋 줄 수 있음 */
/*           상대적인 위치 +top, left, bottom, right 이용해서 움직임  */
/* fixed: 배치되는 위치는 항상 컨테이닝 블록에 상대적임 */
/*         초기 컨테이닝 블록의 상대적 위치! */
/*         메뉴 네비게이션바 만들 때 유용 */
/* sticky: 처음에는 고정하지 않았다가 나중에 고정되게 할 수 있음 */
